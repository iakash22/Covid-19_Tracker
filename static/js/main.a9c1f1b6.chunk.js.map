{"version":3,"sources":["utils/Loader.jsx","App.js","index.js"],"names":["Loader","_jsxs","className","children","_jsx","App","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","dataFetch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","console","log","Error","message","statewise","t0","setTimeout","stop","apply","arguments","useEffect","_Fragment","map","item","index","state","confirmed","recovered","deaths","active","lastupdatedtime","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"gPAmBeA,EAjBA,WACX,OACIC,eAAA,OAAKC,UAAU,UAASC,SAAA,CACpBC,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,UACAA,cAAA,cCmEGC,G,MA5EH,WACV,IAAAC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAA8BL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAMpBG,EAAS,eAAAC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACC,OAAjBX,GAAW,GAAMS,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEGC,IAAMC,IAAI,2CAA2C,KAAD,EACrD,GADXN,EAAGE,EAAAK,KACTC,QAAQC,IAAIT,GACPA,EAAI,CAADE,EAAAE,KAAA,cACA,IAAIM,MAAMV,EAAIW,SAAS,KAAD,EAE9BtB,EAAQW,EAAIZ,KAAKwB,WAAWV,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAE5BM,QAAQC,IAAI,iBAAgBP,EAAAW,IAAO,QAdrCC,YAAW,WACTrB,GAAW,KAeH,KAAM,yBAAAS,EAAAa,UAAAhB,EAAA,mBACjB,kBAbc,OAAAJ,EAAAqB,MAAA,KAAAC,YAAA,GAiBf,OAHAC,qBAAU,WACRxB,MACC,IAEDZ,cAAAqC,WAAA,CAAAtC,SAEIW,EACIb,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACrBC,cAAA,KAAAD,SAAG,eACHC,cAAA,OAAAD,SACAC,cAACJ,EAAM,SAMTI,cAAA,OAAAD,SACEF,eAAA,UAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,6BACJF,eAAA,SAAOC,UAAU,QAAOC,SAAA,CACtBC,cAAA,SAAOF,UAAU,aAAYC,SAC3BF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SAAI,cACJC,cAAA,MAAAD,SAAI,cACJC,cAAA,MAAAD,SAAI,WACJC,cAAA,MAAAD,SAAI,WACJC,cAAA,MAAAD,SAAI,oBAIRC,cAAA,SAAAD,SACGO,EAAKgC,KAAI,SAACC,EAAMC,GACf,OACE3C,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAAD,SAAKwC,EAAKE,QACVzC,cAAA,MAAAD,SAAKwC,EAAKG,YACV1C,cAAA,MAAAD,SAAKwC,EAAKI,YACV3C,cAAA,MAAAD,SAAKwC,EAAKK,SACV5C,cAAA,MAAAD,SAAKwC,EAAKM,SACV7C,cAAA,MAAAD,SAAKwC,EAAKO,oBANHN,oBCxDjCO,IAASC,OACPhD,cAACiD,IAAMC,WAAU,CAAAnD,SACfC,cAACC,EAAG,MAENkD,SAASC,eAAe,W","file":"static/js/main.a9c1f1b6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from './utils/Loader';\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const timeAwait = (time) => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    },time);\r\n  }\r\n  const dataFetch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get('https://data.covid19india.org/data.json');\r\n      console.log(res);\r\n      if (!res) {\r\n        throw new Error(res.message);\r\n      }\r\n      setData(res.data.statewise);\r\n    } catch (err) {\r\n      console.log('data not fetch', err);\r\n    }\r\n    timeAwait(2000);\r\n  }\r\n  useEffect(() => {\r\n    dataFetch();\r\n  }, [])\r\n  return (\r\n    <>\r\n      {\r\n        loading ? (\r\n            <div className='loader'>\r\n              <p>Loading...</p>\r\n              <div>\r\n              <Loader />\r\n              </div>\r\n            </div>\r\n          )\r\n          :\r\n          (\r\n            <div>\r\n              <center>\r\n                <h1>INDIA COVID-19 DASHBOARD</h1>\r\n                <table className=\"table\">\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th>State</th>\r\n                      <th>Confirmed</th>\r\n                      <th>Recovered</th>\r\n                      <th>Deaths</th>\r\n                      <th>Active</th>\r\n                      <th>LastUpdate</th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                    {data.map((item, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{item.state}</td>\r\n                          <td>{item.confirmed}</td>\r\n                          <td>{item.recovered}</td>\r\n                          <td>{item.deaths}</td>\r\n                          <td>{item.active}</td>\r\n                          <td>{item.lastupdatedtime}</td>\r\n                        </tr>\r\n                      )\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </center>\r\n            </div>\r\n          )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}